{
	"info": {
		"_postman_id": "92948956-46a5-4bad-87e7-7a884746ce24",
		"name": "ProductsServiceAPI",
		"description": "# üöÄ Come√ßando aqui\n\nEsta cole√ß√£o cont√©m os endpoints para gerenciar produtos e suas integra√ß√µes com usu√°rios.\n\n## üîñ **Como usar esta cole√ß√£o**\n\n#### **Endpoints dispon√≠veis**\n\n- GET /products - Lista todos os produtos com dados dos usu√°rios associados\n- POST /products - Cria um novo produto associado a um usu√°rio existente\n- POST /products/with-user - Cria um produto e usu√°rio de forma ass√≠ncrona via Kafka\n\n#### **Funcionalidades principais**\n\n- Cadastro e consulta de produtos\n- Integra√ß√£o com servi√ßo externo de usu√°rios\n- Cache de usu√°rios com Redis\n- Mensageria com Kafka para cria√ß√£o ass√≠ncrona\n- Valida√ß√£o de dados e tratamento de erros\n\n#### **Ambiente necess√°rio**\n\n- Redis rodando na porta 6379\n- Kafka rodando na porta 9092\n- Zookeeper na porta 2181\n- MySQL configurado conforme ambiente\n\n#### **Vari√°veis**\n\nA vari√°vel `base_url` deve apontar para o endere√ßo da API de produtos.\n\n#### **Testes**\n\nCada request possui testes b√°sicos para validar o c√≥digo de status da resposta.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "10550343"
	},
	"item": [
		{
			"name": "Get products",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/products",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"products"
					]
				},
				"description": "Retorna a lista de todos os produtos cadastrados, incluindo os dados dos usu√°rios associados. N√£o requer corpo na requisi√ß√£o."
			},
			"response": []
		},
		{
			"name": "Post product",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"Produto XPTO\",\n  \"description\": \"Descri√ß√£o do produto XPTO\",\n  \"price\": 149.99,\n  \"quantity\": 10,\n  \"userId\": 1\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/products",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"products"
					]
				},
				"description": "Cria um novo produto associado a um usu√°rio existente. O usu√°rio deve existir no sistema externo. Retorna 201 em caso de sucesso."
			},
			"response": []
		},
		{
			"name": "Post product empty",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"Produto XPTO\",\n  \"description\": \"\",\n  \"price\": 149.99,\n  \"quantity\": 20,\n  \"userId\": 1\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/products",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"products"
					]
				},
				"description": "Testa a cria√ß√£o de produto com descri√ß√£o vazia. √ötil para validar o tratamento de campos opcionais."
			},
			"response": []
		},
		{
			"name": "Post product with user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"Produto XPTO\",\n  \"description\": \"\",\n  \"price\": 149.99,\n  \"quantity\": 20,\n  \"userId\": 1\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/products",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"products"
					]
				},
				"description": "Cria um produto e usu√°rio de forma ass√≠ncrona via Kafka. O processamento √© feito em background e uma mensagem de sucesso √© retornada imediatamente."
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "id",
			"value": "1"
		},
		{
			"key": "base_url",
			"value": "https://postman-rest-api-learner.glitch.me/"
		}
	]
}